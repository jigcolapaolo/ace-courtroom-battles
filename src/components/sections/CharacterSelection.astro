---
import { CHARACTERS } from "@lib/consts";
import CharacterSelectionList from "./CharacterSelectionList.astro";
import CharacterSelectionListSmall from "./CharacterSelectionListSmall.astro";

const firstSevenCharacters = CHARACTERS.slice(0, 7);
const lastSevenCharacters = CHARACTERS.slice(7);
---

<section class="my-40">
    <h3 class="text-5xl text-center font-medium text-badge">
        Meet the Attorneys and Prosecutors
    </h3>
    <p class="mt-10 text-lg text-center">Discover the details of the courtroom rivals</p>
    <div class="mt-28 flex flex-col items-center justify-center gap-8">
        <article class="flex flex-col lg:flex-row w-full items-center justify-center relative">
            <CharacterSelectionList characterList={firstSevenCharacters} />
            <header class="relative flex w-full lg:w-[40%] flex-col items-center justify-center">
                <img 
                    loading="eager"
                    transition:name="character-img-lg"
                    class="character-img-lg w-[300px] h-[400px]" 
                    alt="Image of Character" 
                    src="/characters/phoenix-lg-select.webp" 
                    style="filter: drop-shadow(0 0 20px var(--color-fourth));"
                />
                <div class="absolute flex flex-col items-center justify-end h-full">
                    <img 
                        loading="eager"
                        transition:name="character-badge"
                        class="character-badge w-20 h-auto "
                        alt="Image of badge" 
                        src="/badges/attorney-badge.webp" 
                    />
                    <h2 
                        transition:name="character-title"
                        style="filter: drop-shadow(0 0 2px black);"
                        class="character-title  text-5xl text-wrap text-badge text-center"
                    >
                        Phoenix Wright
                    </h2>
                </div>
            </header>
            <CharacterSelectionList characterList={lastSevenCharacters} secondList />
            <CharacterSelectionListSmall characterList={CHARACTERS} />
        </article>
    </div>

</section>

<script>
    async function initUserLogin() {
        try {
            console.log("initUserLogin - Start");
            const { signIn, signOut } = await import('auth-astro/client');
            console.log("auth-astro/client imported");

            const loginButton = document.querySelector("#login") as HTMLButtonElement;
            const logoutButton = document.querySelector("#logout") as HTMLButtonElement;

            if (!loginButton || !logoutButton) {
                console.log("Buttons not found");
                return;
            }

            console.log("Buttons found");

            function updateLoginButton() {
                console.log("Login button clicked");
                signIn("google");
                loginButton.ariaDisabled = "true";
                loginButton.disabled = true;
                loginButton.textContent = "Logging in...";
            }

            loginButton.addEventListener('click', () => {
                console.log("Adding click event to login button");
                updateLoginButton();
            });

            logoutButton.addEventListener('click', () => {
                console.log("Logout button clicked");
                signOut();
            });

        } catch (error) {
            console.error("Error in initUserLogin:", error);
        }
    }

    console.log("Adding event listeners for page load");
    document.addEventListener("astro:page-load", () => {
        console.log("astro:page-load triggered");
        initUserLogin();
    });

    document.addEventListener("astro:after-swap", () => {
        console.log("astro:after-swap triggered");
        initUserLogin();
    });

    console.log("Calling initUserLogin initially");
    initUserLogin();
</script>
