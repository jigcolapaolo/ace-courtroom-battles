---
import { CHARACTERS } from "@lib/consts";
import CharacterSelectionList from "./CharacterSelectionList.astro";
import CharacterSelectionListSmall from "./CharacterSelectionListSmall.astro";

const firstSevenCharacters = CHARACTERS.slice(0, 7);
const lastSevenCharacters = CHARACTERS.slice(7);
---

<section class="my-40">
    <h3 class="text-5xl text-center font-medium text-badge">
        Meet the Attorneys and Prosecutors
    </h3>
    <p class="mt-10 text-lg text-center">Discover the details of the courtroom rivals</p>
    <div class="mt-28 flex flex-col items-center justify-center gap-8">
        <article class="flex flex-col lg:flex-row w-full items-center justify-center relative">
            <CharacterSelectionList characterList={firstSevenCharacters} />
            <header class="relative flex w-full lg:w-[40%] flex-col items-center justify-center">
                <img 
                    loading="eager"
                    transition:name="character-img-lg"
                    class="character-img-lg w-[300px] h-[400px]" 
                    alt="Image of Character" 
                    src="/characters/phoenix-lg-select.webp" 
                    style="filter: drop-shadow(0 0 20px var(--color-fourth));"
                />
                <div class="absolute flex flex-col items-center justify-end h-full">
                    <img 
                        loading="eager"
                        transition:name="character-badge"
                        class="character-badge w-20 h-auto "
                        alt="Image of badge" 
                        src="/badges/attorney-badge.webp" 
                    />
                    <h2 
                        transition:name="character-title"
                        style="filter: drop-shadow(0 0 2px black);"
                        class="character-title  text-5xl text-wrap text-badge text-center"
                    >
                        Phoenix Wright
                    </h2>
                </div>
            </header>
            <CharacterSelectionList characterList={lastSevenCharacters} secondList />
            <CharacterSelectionListSmall characterList={CHARACTERS} />
        </article>
    </div>

</section>

<script>
    document.addEventListener("astro:page-load", () => {
            
        const charLinks = document.querySelectorAll('.character-link') as NodeListOf<HTMLAnchorElement>;
        const charTitle = document.querySelector('.character-title') as HTMLHeadingElement;
        const charImgLg = document.querySelector('.character-img-lg') as HTMLImageElement;
        const charBadge = document.querySelector('.character-badge') as HTMLImageElement;


        // if (!charLinks || !charTitle || !charImgLg || !charBadge) return
    
        charLinks.forEach(link => {
            link.addEventListener('mouseenter', (event) => {
                event.preventDefault();
                const { name, type } = (event.currentTarget as HTMLElement).dataset as { name: string; type: string; };
                const charFirstName = name?.split(' ')[0].toLowerCase();
                const characterImgSrc = `/characters/${charFirstName}-lg-select.webp`;
                const characterBadgeSrc = `/badges/${type}-badge.webp`;
    
                charImgLg.src = characterImgSrc;
                charBadge.src = characterBadgeSrc;
                charTitle.textContent = name as string;
    
                charImgLg.alt = `Picture of ${name}`;
                charBadge.alt = `${type} badge`;
            })
        })

        charLinks.forEach(link => {
            link.addEventListener('touchstart', (event) => {

                const { name, type } = (event.currentTarget as HTMLElement).dataset as { name: string; type: string; };
                const charFirstName = name?.split(' ')[0].toLowerCase();
                const characterImgSrc = `/characters/${charFirstName}-lg-select.webp`;
                const characterBadgeSrc = `/badges/${type}-badge.webp`;
    
                charImgLg.src = characterImgSrc;
                charBadge.src = characterBadgeSrc;
                charTitle.textContent = name as string;
    
                charImgLg.alt = `Picture of ${name}`;
                charBadge.alt = `${type} badge`;
            })
        })
        
    })

</script>